import { apiUrl, requestHeader } from '@/base-url';
import { navbar_fetch } from '@/component-functions';
import Navbar from '@/components/navbar';
import Head from 'next/head'
import Link from 'next/link';
import { useState } from 'react';

export async function getStaticProps() {
  const data = await fetch(apiUrl() + "view/department", requestHeader())
  const departments = await data.json();
  const course= await navbar_fetch();
  return {
    props: {
      data: departments.result,
      course
    }
  }
}

export default function Home({ data, course }) {
  const [departments, setdepartments] = useState(data);
  const [name, setname] = useState("");
  const [mobile, setmobile] = useState("");
  const [error, seterror] = useState("");
  function changeHandler(e) {
    var input_name = e.target.name;
    if (input_name == "name") {
      setname(e.target.value);
    } else {
      setmobile(e.target.value);
    }
  }
  function saveData() {
    if (name == "" || mobile == "") {
      seterror("All field required");
      return false;
    }
    var body_data = {
      d_name: name,
      mobile: mobile,
    };
    fetch(apiUrl() + "insert/department", requestHeader('POST', body_data)).then(res => res.json()).then(data => {
      setdepartments([...departments, data.result[0]]);
      setname("");
      setmobile("");
      seterror("Successfully save");
    });
  }

  function deleteData(e) {
    fetch(apiUrl() + "delete/department/id/" + e, requestHeader()).then(res => res.json()).then(data => {
      setdepartments(departments.filter((d, i) => (d.id != e ?? d)));
      seterror("Successfully Delete");
    });
  }
  return (
    <>
      <Head>
        <title>GetStaticProps & GetStaticPath & GetServerSideProps</title>
        <meta name="description" content="Generated by GetStaticProps & GetStaticPath & GetServerSideProps" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Departments</h1>
        <p>{error}</p>
        <div>
          {departments.map((d, i) => (
            <div key={i}>
              <Link href={"/department/" + d.id}> <h2>{d.d_name}</h2></Link>
              <p>{d.mobile}</p>
              <button onClick={() => deleteData(d.id)}>Delete</button>
            </div>
          ))}
        </div>
        <div>
          <label>Name</label>
          <input type="text" onChange={changeHandler} value={name} name="name" />
          <label>Mobile</label>
          <input type="text" onChange={changeHandler} value={mobile} name="mobile" />
          <br />
          <button onClick={saveData} >Save</button>
        </div>
        <Navbar course={course} />
      </main>
    </>
  )
}



